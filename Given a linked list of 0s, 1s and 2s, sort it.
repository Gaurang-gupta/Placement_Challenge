class Solution
{
    //Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head){
        Node nhead = null,zhead = null,ztail=null,ohead = null,otail=null, thead=null,ttail=null,p = head;
        while(p!=null){
            Node toAdd = new Node(p.data);
            if(toAdd.data==0){
                if(zhead==null) zhead=ztail=toAdd;
                else{
                    ztail.next=toAdd;
                    ztail = toAdd;
                }
            }
            else if(toAdd.data==1){
                if(ohead==null) ohead=otail=toAdd;
                else{
                    otail.next=toAdd;
                    otail = toAdd;
                }
            }
            else {
                if(thead==null) thead=ttail=toAdd;
                else{
                    ttail.next=toAdd;
                    ttail = toAdd;
                }
            }
            p=p.next;
        }
        if(zhead!=null && ohead!=null && otail!=null){
            nhead=zhead;
            ztail.next=ohead;
            otail.next=thead;
        }
        else if(ohead==null && zhead==null){
            nhead = thead;
        }
        else if(zhead==null){
            nhead = ohead;
            otail.next=thead;
        }
        else if(ohead==null){
            nhead = zhead;
            ztail.next = thead;
        }
        return nhead;
    }
}
