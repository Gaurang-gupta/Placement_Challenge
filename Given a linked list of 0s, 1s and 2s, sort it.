class Solution
{
    //Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head){
        int z = 0, o = 0, t = 0;
        Node temp = head;
        while(temp!=null){
            if(temp.data == 0) z++;
            else if(temp.data == 1) o++;
            else t++;
            temp = temp.next;
        }
        Node nhead = null, ntail = null;
        for(int i=0;i<z;i++){
            Node toAdd = new Node(0);
            if(nhead==null) nhead = ntail = toAdd;
            else {
                ntail.next = toAdd;
                ntail = toAdd;
            }
        }
        for(int i=0;i<o;i++){
            Node toAdd = new Node(1);
            if(nhead==null) nhead = ntail = toAdd;
            else {
                ntail.next = toAdd;
                ntail = toAdd;
            }
        }
        for(int i=0;i<t;i++){
            Node toAdd = new Node(2);
            if(nhead==null) nhead = ntail = toAdd;
            else {
                ntail.next = toAdd;
                ntail = toAdd;
            }
        }
        return nhead;
    }
}
