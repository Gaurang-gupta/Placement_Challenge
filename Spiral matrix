class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ans = new ArrayList<>();
        int dir = 0;
        int left = 0, right = matrix[0].length-1, top = 0, down = matrix.length-1;
        while(left<=right && top<=down){
            if(dir==0 && left<=right && top<=down) {
                for(int i = left;i<=right;i++) ans.add(matrix[top][i]);
                dir = 1;
                top++;
            }
            if(dir==1 && left<=right && top<=down){
                for(int i=top;i<=down;i++){
                    ans.add(matrix[i][right]);
                }
                dir = 2;
                right--;
            }
            if(dir==2 && left<=right && top<=down){
                for(int i=right;i>=left;i--){
                    ans.add(matrix[down][i]);
                }
                dir=3;
                down--;
            }
            if(dir==3 && left<=right && top<=down){
                for(int i=down;i>=top;i--){
                    ans.add(matrix[i][left]);
                }
                dir = 0;
                left++;
            }
        }
        return ans;
    }
}
