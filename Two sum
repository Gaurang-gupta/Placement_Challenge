class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] ans =  new int[2];
        int n = nums.length;
        HashMap<Integer,Integer> hs = new HashMap<>(); // For frequncy of every number
        int first = 0,last = 0;
        for(int i=0;i<n;i++){
            if(hs.containsKey(nums[i])) hs.put(nums[i],hs.get(nums[i])+1);
            else hs.put(nums[i],1);
        }
        for(int i=0;i<n;i++){
            int val = target-nums[i];
            if(val!=nums[i]){ //If both numbers are different
                if(hs.containsKey(val)) {
                    first = i;
                    last = val;
                    break;
                }
            }
            else{
                if(hs.containsKey(val) && hs.get(val)>1){ // If both are same they should occur atleast twice
                    first = i;
                    last = val;
                    break;
                }
            }
        }
        int lastInd = -1;
        for(int i=0;i<n;i++){
            if(nums[i]==last && i!=first){
                lastInd = i;
                break;
            }
        }
        ans[0] = first;
        ans[1] = lastInd;
        Arrays.sort(ans);
        return ans;
    }
}
