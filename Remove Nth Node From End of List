/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int length(ListNode head){
        ListNode temp = head;
        int n = 0;
        while(temp!=null){
            n+=1;
            temp = temp.next;
        }
        return n;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int l = length(head);
        if(l==1){
            head = null;
            return head;
        }
        int f = l-n+1;
        if(f==1){
            return head.next;
        }
        int i=1;
        ListNode temp = head;
        while(i<f){
            temp = temp.next;
            i+=1;
        }
        ListNode t = head;
        while(t.next!=temp){
            t = t.next;
        }
        if(temp!=null) t.next = temp.next;
        return head;
    }
}
