/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
        if(root1 == null) return root2;
        if(root2 == null) return root1;
        
        TreeNode root3 = null;
        TreeNode ans = helper(root1,root2,root3);
        return ans;
    }
    
    public TreeNode helper(TreeNode root1, TreeNode root2,TreeNode root3){
        if(root1 == null && root2==null) return null;
        if(root1==null) return root2;
        if(root2==null) return root1;
        int temp = root1.val + root2.val;
        if(root3==null){
            root3 = new TreeNode(temp);
        }
        root3.left = helper(root1.left,root2.left,root3.left);
        root3.right = helper(root1.right,root2.right,root3.right);
        return root3;
    }
}
